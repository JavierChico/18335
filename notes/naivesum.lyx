#LyX 2.3 created this file. For more info see http://www.lyx.org/
\lyxformat 544
\begin_document
\begin_header
\save_transient_properties true
\origin unavailable
\textclass article
\begin_preamble

\renewcommand{\vec}[1]{\mathbf{#1}}

\renewcommand{\labelenumi}{(\alph{enumi})}
\renewcommand{\labelenumii}{(\roman{enumii})}

\newcommand{\fl}{\operatorname{fl}}

\date{Created Fall 2019; updated \today}
\end_preamble
\use_default_options false
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding auto
\fontencoding global
\font_roman "default" "default"
\font_sans "default" "default"
\font_typewriter "default" "default"
\font_math "auto" "auto"
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100 100
\font_tt_scale 100 100
\use_microtype false
\use_dash_ligatures true
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\spacing single
\use_hyperref false
\papersize default
\use_geometry true
\use_package amsmath 2
\use_package amssymb 1
\use_package cancel 1
\use_package esint 0
\use_package mathdots 0
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 0
\use_minted 0
\index Index
\shortcut idx
\color #008000
\end_index
\topmargin 0.7in
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\is_math_indent 0
\math_numbering_side default
\quotes_style english
\dynamic_quotes 0
\papercolumns 1
\papersides 2
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Title
Notes on the accuracy and stability of naive summation
\end_layout

\begin_layout Author
S.
 G.
 Johnson, MIT Course 18.335
\end_layout

\begin_layout Section
Summation: Order matters
\end_layout

\begin_layout Standard
Consider the summation function 
\begin_inset Formula $f(x)=\sum_{i=1}^{n}x_{i}$
\end_inset

 for vectors 
\begin_inset Formula $x\in\mathbb{R}^{n}$
\end_inset

 or 
\begin_inset Formula $x\in\mathbb{F}^{n}$
\end_inset

 (
\begin_inset Formula $n$
\end_inset

 real numbers).
 When we implement an approximate version 
\begin_inset Formula $\tilde{f}(x)$
\end_inset

 of this sum on a computer, using 
\begin_inset Formula $\oplus$
\end_inset

 (floating-point addition) rather than 
\begin_inset Formula $+$
\end_inset

 (exact addition), there are many possible algorithms, and different algorithms
 will have different roundoff errors.
\end_layout

\begin_layout Standard
A key fact to remember is that 
\begin_inset Formula $\oplus$
\end_inset

 is commutative but 
\emph on
not associative.

\emph default
 In particular, consider 
\begin_inset Formula $\frac{1}{\epsilon_{\text{machine}}^{2}}+\frac{-1}{\epsilon_{\text{machine}}^{2}}+1=1$
\end_inset

.
 In floating-point arithmetic, we can parenthesize (associate) this sum
 in two different ways to obtain two different results :
\begin_inset Formula 
\[
\underbrace{\left(\frac{1}{\epsilon_{\text{machine}}^{2}}\oplus\frac{-1}{\epsilon_{\text{machine}}^{2}}\right)}_{=0}\oplus1=1,
\]

\end_inset


\begin_inset Formula 
\[
\frac{1}{\epsilon_{\text{machine}}^{2}}\oplus\underbrace{\left(\frac{-1}{\epsilon_{\text{machine}}^{2}}\oplus1\right)}_{=-1/\epsilon_{\text{machine}}^{2}}=0.
\]

\end_inset

In these notes, we will analyze the most obvious possible algorithm for
 
\begin_inset Formula $\tilde{f}(x)$
\end_inset

: 
\begin_inset Quotes eld
\end_inset

naive
\begin_inset Quotes erd
\end_inset

 left-to-right summation.
 Later, we will see that there are often better ways to compute 
\begin_inset Formula $f(x)$
\end_inset

.
 A much more complete analysis of many summation algorithms can be found
 in Higham (1993)
\begin_inset space ~
\end_inset


\begin_inset CommandInset citation
LatexCommand cite
key "Higham93"
literal "false"

\end_inset

.
 
\end_layout

\begin_layout Section
Naive summation
\end_layout

\begin_layout Standard
In pseudocode, the most obvious algorithm for summation of 
\begin_inset Formula $n$
\end_inset

 floating-point inputs 
\begin_inset Formula $x\in\mathbb{F}^{n}$
\end_inset

 is to simply sum the terms in order from left to right:
\end_layout

\begin_layout LyX-Code
sum = 
\begin_inset Formula $0$
\end_inset


\end_layout

\begin_layout LyX-Code
for 
\begin_inset Formula $i$
\end_inset

 = 
\begin_inset Formula $1$
\end_inset

 to 
\begin_inset Formula $n$
\end_inset


\end_layout

\begin_layout LyX-Code
   sum = sum + 
\begin_inset Formula $x_{i}$
\end_inset


\end_layout

\begin_layout LyX-Code
\begin_inset Formula $f(x)$
\end_inset

 = sum
\end_layout

\begin_layout Standard
For analysis, it is a bit more convenient to define the process inductively:
 
\begin_inset Formula 
\begin{eqnarray*}
s_{0} & = & 0\\
s_{k} & = & s_{k-1}+x_{k}\;\mbox{for }0<k\leq n,
\end{eqnarray*}

\end_inset

with 
\begin_inset Formula $f(x)=s_{n}$
\end_inset

.
 (The intermediate values 
\begin_inset Formula $s_{k}$
\end_inset

 are known as 
\begin_inset Quotes eld
\end_inset

partial
\begin_inset Quotes erd
\end_inset

 sums.) When we implement this in floating-point arithmetic, we get the function
 
\begin_inset Formula $\tilde{f}(x)=\tilde{s}_{n}$
\end_inset

, where 
\begin_inset Formula $\tilde{s}_{k}=\tilde{s}_{k-1}\oplus x_{k}$
\end_inset

, with 
\begin_inset Formula $\oplus$
\end_inset

 denoting (correctly rounded) floating-point addition.
\end_layout

\begin_layout Section
An upper bound on the error
\end_layout

\begin_layout Standard
We can easily prove the following upper bound on the errors accumulated
 by the naive floating-poing sum: 
\begin_inset Formula 
\begin{equation}
|\tilde{f}(x)-f(x)|\leq n\epsilon_{\mbox{machine}}\sum_{i=1}^{n}|x_{i}|+O(\epsilon_{\mbox{machine}}^{2}).\label{eq:bound}
\end{equation}

\end_inset

 This means that the 
\emph on
relative error 
\emph default
in the sum is bounded above by
\begin_inset Formula 
\begin{equation}
\frac{|\tilde{f}(x)-f(x)|}{|f(x)|}\le nO(\epsilon_{\mbox{machine}})\left[\frac{\sum_{i=1}^{n}|x_{i}|}{\left|\sum_{i=1}^{n}x_{i}\right|}\right].\label{eq:relerr}
\end{equation}

\end_inset

The 
\begin_inset Formula $[\cdots]$
\end_inset

 factor is what we will eventually call the 
\series bold
condition number
\series default
 of the summation problem, a term that we we will define precisely later
 in 18.335.
 In the special case of summing 
\emph on
nonnegative
\emph default
 values 
\begin_inset Formula $x_{i}\geq0$
\end_inset

, the 
\begin_inset Formula $[\cdots]$
\end_inset

 term is 
\begin_inset Formula $=1$
\end_inset

, and we find that the relative error grows 
\series bold
at worst linearly
\series default
 with the problem size 
\begin_inset Formula $n$
\end_inset

.
\end_layout

\begin_layout Standard
To prove this, we first prove the lemma:
\begin_inset Formula 
\begin{equation}
\tilde{f}(x)=\sum_{i=1}^{n}x_{i}\prod_{k=i}^{n}(1+\epsilon_{k}),\label{eq:lemma}
\end{equation}

\end_inset

where 
\begin_inset Formula $\epsilon_{1}=0$
\end_inset

 and the other 
\begin_inset Formula $\epsilon_{k}$
\end_inset

 satisfy 
\begin_inset Formula $|\epsilon_{k}|\leq\epsilon_{\mbox{machine}}$
\end_inset

, by induction on 
\begin_inset Formula $n$
\end_inset

.
\end_layout

\begin_layout Itemize
For 
\begin_inset Formula $n=1$
\end_inset

, it is trivial with 
\begin_inset Formula $\epsilon_{1}=0$
\end_inset

.
\end_layout

\begin_layout Itemize
Now for the inductive step.
 Suppose 
\begin_inset Formula $\tilde{s}_{n-1}=\sum_{i=1}^{n-1}x_{i}\prod_{k=i}^{n-1}(1+\epsilon_{k})$
\end_inset

.
 Then 
\begin_inset Formula $\tilde{s}_{n}=\tilde{s}_{n-1}\oplus x_{n}=(\tilde{s}_{n-1}+x_{n})(1+\epsilon_{n})$
\end_inset

 where 
\begin_inset Formula $|\epsilon_{n}|<\epsilon_{\mbox{machine}}$
\end_inset

 is guaranteed by floating-point addition.
 The result follows by inspection: the previous terms are all multiplied
 by 
\begin_inset Formula $(1+\epsilon_{n})$
\end_inset

, and we add a new term 
\begin_inset Formula $x_{n}(1+\epsilon_{n})$
\end_inset

.
 
\end_layout

\begin_layout Standard
Given lemma.
\begin_inset space ~
\end_inset

(
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:lemma"
plural "false"
caps "false"
noprefix "false"

\end_inset

), let us multiply out the terms: 
\begin_inset Formula 
\begin{equation}
(1+\epsilon_{i})\cdots(1+\epsilon_{n})=1+\sum_{k=i}^{n}\epsilon_{k}+(\mbox{products of }\epsilon)=1+\delta_{i},\label{eq:delta}
\end{equation}

\end_inset

where the products of 
\begin_inset Formula $\epsilon_{k}$
\end_inset

 terms are 
\begin_inset Formula $O(\epsilon_{\mbox{machine}}^{2})$
\end_inset

, and hence 
\begin_inset Formula 
\begin{equation}
|\delta_{i}|\leq\sum_{k=i}^{n}|\epsilon_{k}|+O(\epsilon_{\mbox{machine}}^{2})\le n\epsilon_{\mbox{machine}}+O(\epsilon_{\mbox{machine}}^{2}).\label{eq:delta-bound}
\end{equation}

\end_inset

Now we have: 
\begin_inset Formula $\tilde{f}(x)=f(x)+\sum_{i=1}^{n}x_{i}\delta_{i}$
\end_inset

, and hence (by the triangle inequality): 
\begin_inset Formula 
\[
|\tilde{f}(x)-f(x)|\leq\sum_{i=1}^{n}|x_{i}|\,|\delta_{i}|.
\]

\end_inset

Hence we obtain eq.
\begin_inset space ~
\end_inset

(
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:bound"
plural "false"
caps "false"
noprefix "false"

\end_inset

) from the 
\begin_inset Formula $|\delta_{i}|$
\end_inset

 bound above.
\end_layout

\begin_layout Standard
Note to our future selves: This does 
\emph on
not
\emph default
 correspond to a proof of forwards stability (defined soon in 18.335), since
 we have only shown that 
\begin_inset Formula $|\tilde{f}(x)-f(x)|=\Vert x\Vert_{1}O(\epsilon_{\mbox{machine}})$
\end_inset

, which is different from 
\begin_inset Formula $|\tilde{f}(x)-f(x)|=|f(x)|O(\epsilon_{\mbox{machine}})$
\end_inset

 
\emph on
unless
\emph default
 all the 
\begin_inset Formula $x_{i}$
\end_inset

 are 
\begin_inset Formula $\ge0$
\end_inset

! Our 
\begin_inset Formula $O(\epsilon_{\mbox{machine}})$
\end_inset

 in eq.
\begin_inset space ~
\end_inset

(
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:bound"
plural "false"
caps "false"
noprefix "false"

\end_inset

) is uniformly convergent in 
\begin_inset Formula $x$
\end_inset

, however (that is, the coefficient of 
\begin_inset Formula $\epsilon_{\text{machine}}$
\end_inset

 is independent of 
\begin_inset Formula $x$
\end_inset

, although it depends on 
\begin_inset Formula $n$
\end_inset

).
\end_layout

\begin_layout Section
Average errors
\end_layout

\begin_layout Standard
In fact, the analysis above is typically too pessimistic, because the individual
 errors 
\begin_inset Formula $\epsilon_{k}$
\end_inset

 are typically of 
\emph on
different signs
\emph default
, and in particular can usually be though of as random numbers, because
 the last few digits of typical inputs 
\begin_inset Formula $x_{i}$
\end_inset

 are often random noise and IEEE arithmetic rounds-to-nearest by default.
 For independent random 
\begin_inset Formula $\epsilon_{k}$
\end_inset

, since 
\begin_inset Formula $\delta_{i}$
\end_inset

 is the sum of 
\begin_inset Formula $(n-i+1)$
\end_inset

 random variables with variance 
\begin_inset Formula $\sim\epsilon_{\mbox{machine}}$
\end_inset

 and zero mean, it follows from the usual properties of 
\series bold
random walks
\series default
 that the mean 
\begin_inset Formula $|\delta_{i}|$
\end_inset

 has magnitude 
\begin_inset Formula $\sim\sqrt{n-i+1}O(\epsilon_{\mbox{machine}})\leq\sqrt{n}O(\epsilon_{\mbox{machine}})$
\end_inset

.
 Hence we typically expect 
\begin_inset Formula 
\[
\text{root mean square }|\tilde{f}(x)-f(x)|=O\left(\sqrt{n}\epsilon_{\mbox{machine}}\sum_{i=1}^{n}|x_{i}|\right),
\]

\end_inset

i.e.
 rms errors that grow 
\begin_inset Formula $\sim\sqrt{n}$
\end_inset

.
\end_layout

\begin_layout Standard
This sounds good, but in fact there are summation algorithms that do 
\series bold
much better
\series default
.
 The algorithm for Julia's built-in 
\family typewriter
sum
\family default
 function, for example, is 
\series bold
pairwise summation
\series default
, which has 
\begin_inset Formula $O(\log n$
\end_inset

) worst-case and 
\begin_inset Formula $O(\sqrt{\log n})$
\end_inset

 average-case errors
\begin_inset space ~
\end_inset


\begin_inset CommandInset citation
LatexCommand cite
key "Higham93"
literal "false"

\end_inset

, while having about the same performance as naive summation.
 There is even an algorithm called 
\series bold
compensated summation
\series default
 that achieves 
\begin_inset Formula $O(1)$
\end_inset

 error growth, albeit at increased computational cost.
 Nevertheless, in all of these algorithms the 
\emph on
relative 
\emph default
error is still proportional to the condition number as in eq.
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand eqref
reference "eq:relerr"
plural "false"
caps "false"
noprefix "false"

\end_inset

 above, so they can still give large relative errors for 
\begin_inset Quotes eld
\end_inset

badly conditioned
\begin_inset Quotes erd
\end_inset

 sums where 
\begin_inset Formula $\left|\sum x_{i}\right|\ll\sum|x_{i}|$
\end_inset

.
 In this case, the only way to do better is generally to increase the precision,
 though there are clever ways to increase the precision 
\begin_inset Quotes eld
\end_inset

adaptively
\begin_inset Quotes erd
\end_inset


\begin_inset CommandInset citation
LatexCommand cite
key "Neal15"
literal "false"

\end_inset

.
\end_layout

\begin_layout Section
Backwards stability
\end_layout

\begin_layout Standard
We can easily adapt the error analysis above into a proof of 
\series bold
backwards stability
\series default
 of naive summation.
 To be backwards stable, we must find a vector 
\begin_inset Formula $\tilde{x}\in\mathbb{R}^{n}$
\end_inset

 such that 
\begin_inset Formula $\tilde{f}(x)=f(\tilde{x})$
\end_inset

, and also 
\begin_inset Formula $\tilde{x}$
\end_inset

 is 
\begin_inset Quotes eld
\end_inset

close
\begin_inset Quotes erd
\end_inset

 to 
\begin_inset Formula $x$
\end_inset

 in the sense that 
\begin_inset Formula $\Vert\tilde{x}-x\Vert=\Vert x\Vert O(\epsilon_{\mbox{machine}})$
\end_inset

 in some norm 
\begin_inset Formula $\Vert\cdot\Vert$
\end_inset

.
 We do this in two steps.
 First, we construct 
\begin_inset Formula $\tilde{x}$
\end_inset

 such that 
\begin_inset Formula $\tilde{f}(x)=f(\tilde{x})$
\end_inset

, and then we show that it is close to 
\begin_inset Formula $x$
\end_inset

.
\end_layout

\begin_layout Standard
A possible 
\begin_inset Formula $\tilde{x}$
\end_inset

 follows immediately from lemma.
\begin_inset space ~
\end_inset

(
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:lemma"
plural "false"
caps "false"
noprefix "false"

\end_inset

) and eq.
\begin_inset space ~
\end_inset

(
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:delta"
plural "false"
caps "false"
noprefix "false"

\end_inset

): 
\begin_inset Formula 
\[
\tilde{x}_{i}=x_{i}\prod_{k=i}^{n}(1+\epsilon_{k})=x_{i}(1+\delta_{i}).
\]

\end_inset

Eq.
\begin_inset space ~
\end_inset

(
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:lemma"
plural "false"
caps "false"
noprefix "false"

\end_inset

) tells us that 
\begin_inset Formula $\sum_{i}\tilde{x}_{i}=f(\tilde{x})$
\end_inset

 is equal to our naive floating-point sum 
\begin_inset Formula $\tilde{f}(x)$
\end_inset

 as desired.
\end_layout

\begin_layout Standard
Then, we can use eq.
\begin_inset space ~
\end_inset

(
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:delta-bound"
plural "false"
caps "false"
noprefix "false"

\end_inset

) to show that 
\begin_inset Formula $\Vert\tilde{x}-x\Vert$
\end_inset

 is small.
 As we shall shortly see in 18.335 (Trefethen ch.
\begin_inset space ~
\end_inset

14), it turns out that we can choose any norm that we wish for proving stability
 (stability in one norm implies stability in 
\emph on
every
\emph default
 norm), and in this problem it is convenient to choose the 
\begin_inset Formula $L_{1}$
\end_inset

 norm 
\begin_inset Formula $\Vert x\Vert_{1}=\sum_{i=1}^{n}|x_{i}|$
\end_inset

.
 In this norm, we immediately find 
\begin_inset Formula 
\[
\Vert\tilde{x}-x\Vert_{1}=\sum_{i=1}^{n}\left|x_{i}\delta_{i}\right|\le\Vert x\Vert_{1}n\epsilon_{\mbox{machine}}+O(\epsilon_{\mbox{machine}}^{2})=\Vert x\Vert_{1}O(\epsilon_{\mbox{machine}}).
\]

\end_inset

Note that the 
\begin_inset Quotes eld
\end_inset

constant
\begin_inset Quotes erd
\end_inset

 factor 
\begin_inset Formula $n$
\end_inset

 in the 
\begin_inset Formula $O(\epsilon_{\mbox{machine}})$
\end_inset

 is independent of 
\begin_inset Formula $x$
\end_inset

 (as is required for backwards stability), though it depends on 
\begin_inset Formula $n$
\end_inset

.
\end_layout

\begin_layout Subsection
Regarding 
\begin_inset Formula $\Vert x\Vert$
\end_inset

 versus 
\begin_inset Formula $\Vert\tilde{x}\Vert$
\end_inset


\end_layout

\begin_layout Standard

\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\uuline off
\uwave off
\noun off
\color none
It doesn't matter whether we use 
\begin_inset Formula $\Vert x\Vert$
\end_inset

 or 
\begin_inset Formula $\Vert\tilde{x}\Vert$
\end_inset

 on the right-hand/denominator for the definition of backwards stability
 (or stability), since by the triangle inequality 
\begin_inset Formula $\Vert x\Vert=\Vert\tilde{x}+(x-\tilde{x})\Vert\leq\Vert\tilde{x}\Vert+\Vert\tilde{x}-x\Vert=\Vert\tilde{x}\Vert+\Vert x\Vert O(\epsilon_{\mbox{machine}})$
\end_inset

.
 In particular, it follows that: 
\end_layout

\begin_layout Standard

\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\uuline off
\uwave off
\noun off
\color none
\begin_inset Formula 
\[
\Vert\tilde{x}-x\Vert=\Vert x\Vert O(\epsilon_{\mbox{machine}})\Longleftrightarrow\Vert\tilde{x}-x\Vert=\Vert\tilde{x}\Vert O(\epsilon_{\mbox{machine}})
\]

\end_inset

in any norm.
\end_layout

\begin_layout Subsection
Regarding inputs in 
\begin_inset Formula $\mathbb{R}$
\end_inset

 versus 
\begin_inset Formula $\mathbb{F}$
\end_inset


\end_layout

\begin_layout Standard
In the beginning, we assumed that 
\begin_inset Formula $x$
\end_inset

 was in 
\begin_inset Formula $\mathbb{F}^{n}$
\end_inset

, i.e.
 that the inputs are already floating point numbers.
 Almost the same proof applies if 
\begin_inset Formula $x$
\end_inset

 is in 
\begin_inset Formula $\mathbb{R}^{n}$
\end_inset

 and we first compute 
\begin_inset Formula $\fl(x)$
\end_inset

 (rounding 
\begin_inset Formula $x$
\end_inset

 to the nearest floating-point values) before summing.
 In particular, lemma
\begin_inset space ~
\end_inset

(
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:lemma"
plural "false"
caps "false"
noprefix "false"

\end_inset

) is replaced with
\begin_inset Formula 
\[
\tilde{f}(x)=\sum_{i=1}^{n}\fl(x_{i})\prod_{k=i}^{n}(1+\epsilon_{k})=\sum_{i=1}^{n}x_{i}(1+\epsilon)\prod_{k=i}^{n}(1+\epsilon_{k}),
\]

\end_inset

so that there is merely an extra 
\begin_inset Formula $(1+\epsilon)$
\end_inset

 term.
 This 
\begin_inset Formula $\epsilon$
\end_inset

 is added to the relative error 
\begin_inset Formula $\delta_{i}$
\end_inset

 in (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:delta"
plural "false"
caps "false"
noprefix "false"

\end_inset

), and eq.
\begin_inset space ~
\end_inset

(
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:delta-bound"
plural "false"
caps "false"
noprefix "false"

\end_inset

) is replaced by 
\begin_inset Formula $|\delta_{i}|\leq(n+1)\epsilon_{\mbox{machine}}+O(\epsilon_{\mbox{machine}}^{2}).$
\end_inset

 Changing 
\begin_inset Formula $n$
\end_inset

 to 
\begin_inset Formula $n+1$
\end_inset

 in this coefficient makes no difference to our conclusions above.
\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "Higham93"
literal "false"

\end_inset

Nicholas J.
\begin_inset space ~
\end_inset

Higham, 
\begin_inset Quotes eld
\end_inset

The accuracy of floating point summation,
\begin_inset Quotes erd
\end_inset

 
\emph on
SIAM Journal on Scientific Computing
\emph default
 
\series bold
14
\series default
, pp.
 783–799 (1993).
\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "Neal15"
literal "false"

\end_inset

Radford M.
\begin_inset space ~
\end_inset

Neal, 
\begin_inset Quotes eld
\end_inset

Fast exact summation using small and large superaccumulators,
\begin_inset Quotes erd
\end_inset

 
\emph on
arXiv:1505.05571
\emph default
 (2015); available in Julia via the Xsum.jl package.
\end_layout

\end_body
\end_document
